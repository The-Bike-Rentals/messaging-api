// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Chat {
  pkId                      Int      @id @default(autoincrement())
  sessionId                 String   
  archived                  Boolean?
  contactPrimaryIdentityKey Bytes?
  conversationTimestamp     BigInt?
  createdAt                 BigInt?
  createdBy                 String?  
  description               String?  
  disappearingMode          String?
  displayName               String?  
  endOfHistoryTransfer      Boolean?
  endOfHistoryTransferType  Int?
  ephemeralExpiration       Int?
  ephemeralSettingTimestamp BigInt?
  id                        String   
  isDefaultSubgroup         Boolean?
  isParentGroup             Boolean?
  lastMsgTimestamp          BigInt?
  lidJid                    String?  
  markedAsUnread            Boolean?
  mediaVisibility           Int?
  messages                  String?
  muteEndTime               BigInt?
  name                      String?  
  newJid                    String?  
  notSpam                   Boolean?
  oldJid                    String?  
  pHash                     String?  
  parentGroupId             String?  
  participant               String?
  pinned                    Int?
  pnJid                     String?  
  pnhDuplicateLidThread     Boolean?
  readOnly                  Boolean?
  shareOwnPn                Boolean?
  support                   Boolean?
  suspended                 Boolean?
  tcToken                   Bytes?
  tcTokenSenderTimestamp    BigInt?
  tcTokenTimestamp          BigInt?
  terminated                Boolean?
  unreadCount               Int?
  unreadMentionCount        Int?
  wallpaper                 String?
  lastMessageRecvTimestamp  Int?
  commentsCount             Int?

  @@unique([sessionId, id], map: "global_unique_chat_id_per_session_id")
  @@index([sessionId])
}

model Contact {
  pkId         Int     @id @default(autoincrement())
  sessionId    String  
  id           String  
  name         String? 
  notify       String? 
  verifiedName String? 
  imgUrl       String? 
  status       String? 

  @@unique([sessionId, id], map: "global_unique_contact_id_per_session_id")
  @@index([sessionId])
}

model GroupMetadata {
  pkId              Int      @id @default(autoincrement())
  sessionId         String   
  id                String   
  owner             String?  
  subject           String   
  subjectOwner      String?  
  subjectTime       Int?
  creation          Int?
  desc              String?  
  descOwner         String?  
  descId            String?  
  restrict          Boolean?
  announce          Boolean?
  size              Int?
  participants      String
  ephemeralDuration Int?
  inviteCode        String?  

  @@unique([sessionId, id], map: "global_unique_groupmetadata_id_per_session_id")
  @@index([sessionId])
}

model Message {
  pkId                            Int      @id @default(autoincrement())
  sessionId                       String   
  remoteJid                       String   
  id                              String   
  agentId                         String?  
  bizPrivacyStatus                Int?
  broadcast                       Boolean?
  clearMedia                      Boolean?
  duration                        Int?
  ephemeralDuration               Int?
  ephemeralOffToOn                Boolean?
  ephemeralOutOfSync              Boolean?
  ephemeralStartTimestamp         BigInt?
  finalLiveLocation               String?
  futureproofData                 Bytes?
  ignore                          Boolean?
  keepInChat                      String?
  key                             String
  labels                          String?
  mediaCiphertextSha256           Bytes?
  mediaData                       String?
  message                         String?
  messageC2STimestamp             BigInt?
  messageSecret                   Bytes?
  messageStubParameters           String?
  messageStubType                 Int?
  messageTimestamp                BigInt?
  multicast                       Boolean?
  originalSelfAuthorUserJidString String?  
  participant                     String?  
  paymentInfo                     String?
  photoChange                     String?
  pollAdditionalMetadata          String?
  pollUpdates                     String?
  pushName                        String?  
  quotedPaymentInfo               String?
  quotedStickerData               String?
  reactions                       String?
  revokeMessageTimestamp          BigInt?
  starred                         Boolean?
  status                          Int?
  statusAlreadyViewed             Boolean?
  statusPsa                       String?
  urlNumber                       Boolean?
  urlText                         Boolean?
  userReceipt                     String?
  verifiedBizName                 String?  
  eventResponses                  String?
  pinInChat                       String?

  @@unique([sessionId, remoteJid, id], map: "global_unique_message_key_per_session_id")
  @@index([sessionId])
}

model Session {
  pkId      Int    @id @default(autoincrement())
  sessionId String 
  id        String 
  data      String 

  @@unique([sessionId, id], map: "global_unique_id_per_session_id")
  @@index([sessionId])
}
